// Code generated by bavard DO NOT EDIT

package wizard
import (
	"strconv"

	"github.com/consensys/gnark/frontend"
)

func (i *QueryGlobal) WithTags(tags ...string) *QueryGlobal {
	i.metadata.tags = append(i.metadata.tags, tags...)
	return i
}

func (i *QueryGlobal) WithName(name string) *QueryGlobal {
	i.metadata.name = name
	return i
}

func (i *QueryGlobal) WithDoc(doc string) *QueryGlobal {
	i.metadata.doc = doc
	return i
}

func (i *QueryGlobal) Tags() []string {
	return i.metadata.tags
}

func (i *QueryGlobal) ListTags() []string {
	return i.metadata.listTags()
}

func (i *QueryGlobal) String() string {
	return i.metadata.scope.getFullScope() + "/" + i.metadata.nameOrDefault(i) + "/" + strconv.Itoa(int(i.metadata.id))
}

func (i *QueryGlobal) Explain() string {
	return i.metadata.explain(i)
}
func (i *QueryGlobal) id() id {
	return i.metadata.id
}
// ComputeResult does not return any result for [QueryGlobal] because Global
// constraints do not return results as they are purely constraints that must
// be satisfied.
func (i QueryGlobal) ComputeResult(run Runtime) QueryResult {
	return &QueryResNone{}
}

// ComputeResult does not return any result for [QueryGlobal] because Global
// constraints do not return results.
func (i QueryGlobal) ComputeResultGnark(_ frontend.API, run GnarkRuntime) QueryResultGnark {
	return &QueryResNoneGnark{}
}
