FROM node:18-alpine AS builder

WORKDIR /usr/src/app

COPY package*.json ./

RUN npm install -g typescript && npm ci

COPY . .

RUN rm -rf src/synctx && npm run build

FROM node:18-alpine as builder-synctx

ARG TARGETPLATFORM

WORKDIR /opt/synctx

COPY src/synctx .

RUN apk add --no-cache git perl-utils xz \
  && OCLIF_TARGET=$(echo ${TARGETPLATFORM} | sed 's#/#-#;s#amd64#x64#') \
  && yarn global add oclif && yarn && yarn run build \
  && yarn install --production --ignore-scripts --prefer-offline \
  && git init \
  && git config user.email "sre@consensys.net" \
  && git config user.name "cs-sre" \
  && git commit --allow-empty -m "dummy commit" \
  && oclif pack tarballs --targets="${OCLIF_TARGET}" \
  && tar -xvf dist/synctx-*.tar.gz

FROM node:18-alpine as release

ENV NODE_ENV production
ENV PATH="${PATH}:/opt/synctx/bin"

WORKDIR /usr/src/app

COPY package*.json ./

RUN npm ci && npm cache clean --force \
  && apk add --no-cache curl jq bash gcompat glibc

COPY --chown=node:node --from=builder /usr/src/app/dist ./dist
COPY --chown=node:node --from=builder-synctx /opt/synctx/synctx /opt/synctx/

USER node:node

ENTRYPOINT ["node"]
