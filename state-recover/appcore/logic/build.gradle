import org.gradle.api.tasks.testing.logging.TestExceptionFormat
import org.gradle.api.tasks.testing.logging.TestLogEvent

plugins {
  id 'net.consensys.zkevm.kotlin-library-conventions'
}

group = 'build.linea.staterecover'

repositories {
  // FIXME: temporary workaround until besu delivers final version
  maven {
    url = uri("https://maven.pkg.github.com/Gabriel-Trintinalia/besu")
    credentials {
      username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_MAVEN_USERNAME")
      password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_MAVEN_TOKEN")
    }
  }
}

def wipBesuVersion = '24.10-develop-f9bd355'
//def wipBesuVersion = '24.10.0'

dependencies {
  implementation("io.vertx:vertx-core:${libs.versions.vertx.get()}")
  api(project(':jvm-libs:generic:extensions:kotlin'))
  api(project(':jvm-libs:linea:core:domain-models'))
  api(project(':jvm-libs:linea:core:long-running-service'))
  api(project(':jvm-libs:linea:clients:interfaces'))
  api(project(':jvm-libs:linea:clients:linea-state-manager'))
  api(project(':jvm-libs:linea:blob-decompressor'))
  api(project(':state-recover:appcore:clients-interfaces'))
  api(project(':state-recover:appcore:domain-models'))

  implementation project(':jvm-libs:linea:besu-libs')
  implementation("org.hyperledger.besu.internal:rlp:${libs.versions.besu.get()}") {
    transitive = false
  }

  testImplementation(testFixtures(project(":jvm-libs:linea:blob-compressor")))
  testImplementation("org.bouncycastle:bcprov-jdk18on:1.78.1")
  testImplementation("org.apache.logging.log4j:log4j-slf4j2-impl:${libs.versions.log4j.get()}") {
    because "besu libs in the tests use slf4j"
  }
}

configurations.all {
  resolutionStrategy {
    force "org.hyperledger.besu.internal:rlp:${wipBesuVersion}"
    force "org.hyperledger.besu.internal:core:${wipBesuVersion}"
    force "org.hyperledger.besu.internal:algorithms:${wipBesuVersion}"
    force "org.hyperledger.besu:besu-datatypes:${wipBesuVersion}"
    force "org.hyperledger.besu:plugin-api:${wipBesuVersion}"
    force "org.hyperledger.besu:evm:${wipBesuVersion}"
  }
}

sourceSets {
  integrationTest {
    kotlin {
      compileClasspath += sourceSets.main.output + sourceSets.main.compileClasspath + sourceSets.test.compileClasspath
      runtimeClasspath += sourceSets.main.output + sourceSets.main.runtimeClasspath + sourceSets.test.runtimeClasspath
    }
    compileClasspath += sourceSets.main.output + sourceSets.main.compileClasspath + sourceSets.test.compileClasspath
    runtimeClasspath += sourceSets.main.output + sourceSets.main.runtimeClasspath + sourceSets.test.runtimeClasspath
  }
}

task integrationTest(type: Test) {
  test ->
    description = "Runs integration tests."
    group = "verification"
    useJUnitPlatform()

    classpath = sourceSets.integrationTest.runtimeClasspath
    testClassesDirs = sourceSets.integrationTest.output.classesDirs

    dependsOn(":localStackForStateRecoverComposeUp")

    testLogging {
      events TestLogEvent.FAILED,
        TestLogEvent.SKIPPED,
        TestLogEvent.STANDARD_ERROR,
        TestLogEvent.STARTED,
        TestLogEvent.PASSED
      exceptionFormat TestExceptionFormat.FULL
      showCauses true
      showExceptions true
      showStackTraces true
      // set showStandardStreams if you need to see test logs
      showStandardStreams false
    }
}
